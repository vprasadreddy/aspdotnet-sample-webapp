# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

variables:
  imageRepository: "samplewebapp"
  containerRegistry: "prasadacrdev.azurecr.io"
  dockerfilePath: "**/Dockerfile"
  tag: "latest"
  imagePullSecret: "acr-secret"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              containerRegistry: 'prasad-acr-spn'
              repository: '$(imageRepository)'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: '$(tag)'

          - task: CopyFiles@2
            inputs:
              SourceFolder: "manifests/"
              Contents: "**/*.yml"
              TargetFolder: "$(Pipeline.Workspace)/manifests"

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Pipeline.Workspace)/manifests"
              artifact: "manifests"
              publishLocation: "pipeline"

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build

    jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        environment: "samplewebapp-2040"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: 'deploy'
                    kubernetesServiceConnection: 'aks-dev-spn'
                    manifests: |
                      $(Pipeline.Workspace)/manifests/deployment.yml
                      $(Pipeline.Workspace)/manifests/service.yml
                    containers: '$(containerRegistry)/$(imageRepository):$(tag)'
                    imagePullSecrets: '$(imagePullSecret)'
